//  ${PROBLEM_NAME}

#[[#include]]#<bits/stdc++.h>
using namespace std;

#[[#define]]# all(v)                ((v).begin()), ((v).end())
#[[#define]]# alld(v)                ((v).rbegin()), ((v).rend())
#[[#define]]# sz(v)                ((int)((v).size()))
#[[#define]]# clr(v, d)            memset(v, d, sizeof(v))
#[[#define]]# rep(i, v)            for(int i=0;i<sz(v);++i)
#[[#define]]# lp(i, n)            for(int i=0;i<(ll)(n);++i)
#[[#define]]# lpi(i, j, n)        for(ll i=(j);i<(ll)(n);++i)
#[[#define]]# lpd(i, j, n)        for(ll i=(j);i>=(ll)(n);--i)
#[[#define]]# repa(v)                lpi(i, 0, sz(v)) lpi(j, 0, sz(v[i]))
#[[#define]]# P(x)                cout<<#x<<" = { "<<x<<" }\n"
#[[#define]]# pb                    push_back
#[[#define]]# MP                    make_pair
#[[#define]]# el                     '\n'
#[[#define]]# INF LONG_LONG_MAX
#[[#define]]# de1 cout << "TEST 1" << el;
#[[#define]]# de2 cout << "TEST 2" << el;
#[[#define]]# de3 cout << "TEST 3" << el;
#[[#define]]# ext(x) {cout << x << el;return;}


typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
 
typedef pair<int, int> pi;
typedef pair<ll, ll> pl;
typedef pair<ld, ld> pd;
 
 
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<vi> vvi;
typedef vector<vl> vvl;
typedef vector<ld> vd;
typedef vector<pi> vpi;
typedef vector<pl> vpl;

template<class T>
bool ckmin(T &a, const T &b) { return b < a ? a = b, 1 : 0; }
 
template<class T>
bool ckmax(T &a, const T &b) { return a < b ? a = b, 1 : 0; }
 
int dx4[] = {0, 1, 0, -1};
int dy4[] = {-1, 0, 1, 0};
int dia_m[] = {1, -1, -1, 1};
int dia_r[] = {-1, 1, -1, 1};
int dx6[] = {0, 0, 1, -1, 0, 0};
int dy6[] = {1, -1, 0, 0, 0, 0};
int dz6[] = {0, 0, 0, 0, 1, -1};
int dx8[] = {1, -1, 0, 0, -1, 1, -1, 1};
int dy8[] = {0, 0, 1, -1, 1, 1, -1, -1};
int dkx8[] = {-1, 1, -1, 1, -2, -2, 2, 2};
int dky8[] = {2, 2, -2, -2, 1, -1, 1, -1};
int dx9[] = {0, 0, 0, 0, -1, 1};
int dy9[] = {0, 0, -1, 1, 0, 0};
int dz9[] = {1, -1, 0, 0, 0, 0};

const double PI = acos(-1.0);
const double EPS = (1e-7);
const ll N = 2e5 + 5;
const ll MOD = 1e9 + 7;
const int INFi = 1e9 + 10;
 
const int OO = 0x3f3f3f3f;
const ll LOO = 0x3f3f3f3f3f3f3f3f;
 
 
struct mi {
    int v; explicit operator int() const { return v; }
    mi() { v = 0; }
    mi(long long _v) : v(_v % MOD) { v += (v < 0) * MOD; }
};
mi& operator+=(mi& a, mi b) {
    if ((a.v += b.v) >= MOD) a.v -= MOD;
    return a;
}
mi& operator-=(mi& a, mi b) {
    if ((a.v -= b.v) < 0) a.v += MOD;
    return a;
}
mi operator+(mi a, mi b) { return a += b; }
mi operator-(mi a, mi b) { return a -= b; }
mi operator*(mi a, mi b) { return mi((long long) a.v * b.v); }
mi& operator*=(mi& a, mi b) { return a = a * b; }
mi pow(mi a, long long p) {
 
    assert(p >= 0);
 
    return p == 0 ? 1 : pow(a * a, p / 2) * (p & 1 ? a : 1);
 
}
mi inv(mi a) { assert(a.v != 0); return pow(a, MOD - 2); }
mi operator/(mi a, mi b) { return a * inv(b); }
 
 
// الحمدلله
 
ll binpow(ll a, ll b, ll m = MOD){
    a %= m;
    ll res = 1;
    while(b > 0){
        if(b & 1)
            res = res * a % m;
        a = a * a % m;
        b >>= 1;
    }
    return res;
}
 
 
void solve()
{

}
 
int main() {
	$END
    ios::sync_with_stdio(false);
    cin.tie(0);
    int t = 1;
    /*
    #ifndef ONLINE_JUDGE
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif
     */
    cin >> t;
    while (t--) {
        solve();
 
    }
    
    return 0;
}
